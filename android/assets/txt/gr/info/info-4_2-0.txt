Η ΕΝΤΟΛΗ FOR:
Η εντολή [YELLOW]for[] χρησιμοποιείται επίσης ως δομή επανάληψης.
Η γενική μορφή της είναι:  [YELLOW]for ([RED]αρχικοποίηση[]; [BLUE]συνθήκη[]; [GREEN]διαφοροποίηση[]) {}[]

Αρχικά, [RED]αρχικοποιείται[] μία μεταβλητή, μια [BLUE]συνθήκη[] ελέγχεται και αν είναι αληθής,
η επανάληψη της εντολής [YELLOW]for[] πραγματοποιείται. Στη συνέχεια, η μεταβλητή
[GREEN]διαφοροποιείται[] όπως ορίσαμε και μετά η [BLUE]συνθήκη[] ξαναελέγχεται κ.ο.κ.
[CYAN]___________________________________________________________________________________[]

[PURPLE]1[]    [YELLOW]for ([RED]int i=0[]; [BLUE]i<3[]; [GREEN]i++[]) {[]
[PURPLE]2[]        [CYAN]System.out.println(x);[]
[PURPLE]3[]    [YELLOW]}[]
[PURPLE]4[]    [LIGHT_GRAY]//μετά τον βρόχο, η τιμή του x είναι 3[]
[CYAN]___________________________________________________________________________________[]
Η έξοδος είναι:
0
1
2

Οι [PURPLE]γραμμές[] κώδικα του παραδείγματος εκτελούνται με την παρακάτω σειρά:
[PURPLE]1 [RED](αρχικοποίηση i=0)[], 1 [BLUE](συνθήκη 0<3 αληθής)[], 2, 3, 1 [GREEN](διαφοροποίηση i=1)[]
, 1 [BLUE](συνθήκη 1<3 αληθής)[], 2, 3, 1 [GREEN](διαφοροποίηση i=2)[], 1 [BLUE](συνθήκη 2<3 αληθής)[], 2, 3
, 1 [GREEN](διαφοροποίηση i=3)[], 1 [BLUE](συνθήκη 3<3 ψευδής)[], 4[]

ΜΗΝ ξεχνάς τα ελληνικά ερωτηματικά ([YELLOW];[]) στην αρχικοποίηση και την συνθήκη.